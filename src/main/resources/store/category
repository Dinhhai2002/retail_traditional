CREATE DEFINER=`root`@`localhost` PROCEDURE `retail_traditional`.`sp_g_categories`(
	IN  `userId` INT(11),
	IN  `_status` TINYINT(1),
	IN 	`keySearch`	VARCHAR(255) CHARACTER SET utf8 COLLATE utf8_general_ci,
	OUT `status_code` TINYINT(1),
	OUT `message_error` VARCHAR(255)
)
BEGIN
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN
		SET `status_code` = 1;
		GET DIAGNOSTICS CONDITION 1 `message_error` = MESSAGE_TEXT;
	END;
	SET `status_code`=0;
	SET `message_error`='Success';

	SELECT 	c.*
	FROM 	categories  AS c
	WHERE 	( 
				(`keySearch` <> '' 	AND c.name LIKE CONCAT('%', `keySearch` , '%')
									OR c.prefix_name  LIKE CONCAT('%',`keySearch`,'%')
									OR c.normalize_name  LIKE CONCAT('%',`keySearch`,'%')
									OR c.description  LIKE CONCAT('%',`keySearch`,'%')
				) 
				OR `keySearch` = '' 				
			) 
			AND ( 
					(`_status` > -1 AND c.status = `_status`)
					OR 	`_status` < 0	
			
				)
			AND ( 
					(`userId` > -1 AND c.user_id = `userId`)
					OR 	`userId` < 0	
			
				);
			
	
END



---------------------


CREATE DEFINER=`root`@`localhost` PROCEDURE `retail_traditional`.`sp_g_categories_v2`(
	IN `categoryId` INT(11),
	 OUT `status_code` TINYINT(1),
	 OUT `message_error` VARCHAR(255)
)
SP:BEGIN
	
	 DECLARE `index` TINYINT(3) DEFAULT 0;
	 DECLARE `itemCount` TINYINT(3) DEFAULT 0;
	 
	 DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN
		SET `status_code` = 1;
		GET DIAGNOSTICS CONDITION 1 `message_error` = MESSAGE_TEXT;
	 END;

	 SET `status_code` = 0;
	 SET `message_error` = 'Success';
	

	SELECT 	c.* ,CONCAT('[',GROUP_CONCAT(JSON_OBJECT(
												'id', m.id,
												'name', m.name													
								)
					),']') AS listMaterials
	FROM 	categories c LEFT JOIN materials m ON c.id = m.category_id
	WHERE 	 c.id =`categoryId`AND m.category_id = c.id 
	GROUP BY c.id ;
	

END




-----------------


CREATE DEFINER=`root`@`localhost` PROCEDURE `retail_traditional`.`sp_u_change_status_category`(
	IN `_id` INT(11),
	
	OUT `status_code` TINYINT(1),
	OUT `message_errozr` VARCHAR(255) CHARACTER SET utf8 COLLATE utf8_general_ci
)
SP:BEGIN
	
	DECLARE `isExitCategory` TINYINT DEFAULT 0;
	DECLARE `isUse` TINYINT(1) DEFAULT 0;
	DECLARE `statusCurrent` TINYINT(1) DEFAULT 0;

	DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN
		SET `status_code` = 1;
		GET DIAGNOSTICS CONDITION 1 `message_error` = MESSAGE_TEXT;
	END;

	SELECT 1
	INTO `isExitCategory`
	FROM categories c
	WHERE c.id= `_id`;


	IF `isExitCategory` != 1 THEN
	SET `status_code` = 2;
	SET `message_error` = CONCAT('Danh mục có mã: ',`_id`,' không tìm thấy!');
	LEAVE SP; 
	END IF;


	SELECT 	1
	INTO 	`isUse`
	FROM 	materials m
	WHERE 	m.category_id = `_id`;

	IF `isUse` > 0 THEN
		SET status_code = 2;
		SET message_error = 'Category is used';
		LEAVE SP;
	END IF;


	SELECT c.status 
	INTO   `statusCurrent`
	FROM   categories c
	WHERE  c.id = `_id`;

	SET status_code = 0;
	SET message_error = 'Success';
	
	IF `statusCurrent` = 0 THEN
		UPDATE 	categories c
		SET 	c.status = 1
		WHERE 	c.id = `_id`;
	ELSE
		UPDATE 	categories c
		SET 	c.status = 0
		WHERE 	c.id = `_id`;
	END IF;
	

END



---------------------


CREATE DEFINER=`root`@`localhost` PROCEDURE `retail_traditional`.`sp_u_create_category`(
	IN `_name` VARCHAR(255) CHARACTER SET utf8 COLLATE utf8_general_ci,
	IN `userId` INT(11),
	IN `_sort` INT(11),
	IN `_description` TEXT  CHARACTER SET utf8 COLLATE utf8_general_ci,
		
	OUT `status_code` TINYINT(1),
	OUT `message_error` VARCHAR(255) CHARACTER SET utf8 COLLATE utf8_general_ci
)
SP:BEGIN
	
	DECLARE `isExitCategory` TINYINT DEFAULT 0;

	DECLARE `prefixNameIn` VARCHAR(255) CHARACTER SET utf8 COLLATE utf8_general_ci;
	DECLARE `normalizeNameIn` VARCHAR(255) CHARACTER SET utf8 COLLATE utf8_general_ci;
	DECLARE `codeIn` VARCHAR(100) CHARACTER SET utf8 COLLATE utf8_general_ci;
	DECLARE `preId` INT(11);


	DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN
		SET `status_code` = 1;
		GET DIAGNOSTICS CONDITION 1 `message_error` = MESSAGE_TEXT;
	END;

	SET `status_code`=0;
	SET `message_error`='Success';

	SELECT 1
	INTO `isExitCategory`
	FROM categories c 
	WHERE c.name= `_name`;


	IF `isExitCategory` > 0 THEN
	SET `status_code` = 2;
	SET `message_error` = CONCAT('Tên danh mục: ',`_name`,' đã tồn tại!');
	LEAVE SP; 
	END IF;
	
	SET `prefixNameIn` = prefix_name(`_name`);
	SET `normalizeNameIn` = normalize_name(`_name`);
	SET `codeIn` = prefix_name(`_name`);

	SELECT 	IFNULL(MAX(c.id),0)
	INTO   `preId`
	FROM 	categories c;

	SET `codeIn` = CONCAT(prefixNameIn,preId+1);


	INSERT INTO categories( code,
							name,
							prefix_name,
							normalize_name,
							user_id,
							sort,
							description
						  ) 
					SELECT  `codeIn`,
							`_name`,
							`prefixNameIn`,
							`normalizeNameIn`,
							`userId`,
							`_sort`,
							`_description`;


	SELECT c.* 
	FROM categories AS c
	WHERE c.id = LAST_INSERT_ID(); 
END



------------------------


CREATE DEFINER=`root`@`localhost` PROCEDURE `retail_traditional`.`sp_u_update_category`(
	IN `_id` INT(11),
	IN `_name` VARCHAR(255) CHARACTER SET utf8 COLLATE utf8_general_ci,
	IN `userId` INT(11),
	IN `_sort` INT(11),
	IN `_description` TEXT  CHARACTER SET utf8 COLLATE utf8_general_ci,
		
	OUT `status_code` TINYINT(1),
	OUT `message_error` VARCHAR(255) CHARACTER SET utf8 COLLATE utf8_general_ci
)
SP:BEGIN
	
	DECLARE `isExitCategory` TINYINT DEFAULT 0;

	DECLARE `prefixNameIn` VARCHAR(255) CHARACTER SET utf8 COLLATE utf8_general_ci;
	DECLARE `normalizeNameIn` VARCHAR(255) CHARACTER SET utf8 COLLATE utf8_general_ci;
	DECLARE `codeIn` VARCHAR(100) CHARACTER SET utf8 COLLATE utf8_general_ci;


	DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN
		SET `status_code` = 1;
		GET DIAGNOSTICS CONDITION 1 `message_error` = MESSAGE_TEXT;
	END;

	SET `status_code`=0;
	SET `message_error`='Success';

	SELECT COUNT(*)
	INTO `isExitCategory`
	FROM categories c
	WHERE c.name= `_name`;


	IF `isExitCategory` > 0 THEN
	SET `status_code` = 2;
	SET `message_error` = CONCAT('Tên danh mục: ',`_name`,' đã tồn tại!');
	LEAVE SP; 
	END IF;
	
	SET `prefixNameIn` = prefix_name(`_name`);
	SET `normalizeNameIn` = normalize_name(`_name`);
	SET `codeIn` = prefix_name(`_name`);


	SET `codeIn` = CONCAT(`prefixNameIn`,`_id`);

						
	UPDATE categories c SET 
			c.code = `codeIn`,
			c.name = `_name`,
			c.prefix_name = `prefixNameIn`,
			c.normalize_name = `normalizeNameIn`,
			c.user_id = `userId`,
			c.sort = `_sort`,
			c.description  = `_description`
	WHERE c.id = `_id`;  


	SELECT c.* 
	FROM categories AS c
	WHERE c.id = `_id`;  

END




